# NOTE: Based on https://blogs.oracle.com/developers/building-cross-platform-native-images-with-graalvm
name: Native Image

on:
  push:
    branches:
      - 'master'

jobs:
  build-jar-job:
    name: 'Build JAR'
    runs-on: ubuntu-latest

    steps:

      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Build JAR'
        run: |
          ./gradlew :relive-simulator-server:shadowJar
      - name: 'Get Version Number'
        run: |
          echo "VERSION=$(./gradlew :relive-simulator-server:properties -q | grep "^version:" | awk '{print $2}')" >> $GITHUB_ENV
      - name: 'Publish JAR'
        uses: actions/upload-artifact@v2
        with:
          name: 'relive-simulator-server-${{env.VERSION}}-all.jar'
          path: relive-simulator-server/build/libs/*-all.jar

  build-non-windows-image:
    name: 'Build Non-Windows Image'
    needs: [build-jar-job]
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
        include:
          - os: 'ubuntu-latest'
            label: 'linux'
          - os: 'macos-latest'
            label: 'mac'
    runs-on: ${{matrix.os}}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Setup GraalVM Environment'
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: '21.1.0'
          java: 'java11'
          arch: 'amd64'

      - name: 'Setup GraalVM native-image'
        run: |
          gu install native-image

      - name: 'Get Version Number'
        run: |
          echo "VERSION=$(./gradlew :relive-simulator-server:properties -q | grep "^version:" | awk '{print $2}')" >> $GITHUB_ENV
      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2
        with:
          name: 'relive-simulator-server-${{env.VERSION}}-all.jar'

      - name: 'Build Native Image'
        run: |
          native-image -jar relive-simulator-server-${{env.VERSION}}-all.jar
      - name: 'Publish Native Image'
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: 'relive-simulator-server-${{env.VERSION}}-${{matrix.label}}'
          path: 'relive-simulator-server-${{env.VERSION}}-all'

  build-windows-image:
    needs: [build-jar-job]
    name: 'Build Windows Image'
    runs-on: windows-latest

    steps:

      - name: 'Checkout'
        uses: actions/checkout@v1

      - name: 'Download GraalVM'
        run: |
          Invoke-RestMethod -Uri https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.1.0/graalvm-ce-java11-windows-amd64-21.1.0.zip -OutFile 'graal.zip'
      - name: 'Install GraalVM'
        run: |
          Expand-Archive -path 'graal.zip' -destinationpath '.'
      - name: 'Install Native Image'
        run: |
          graalvm-ce-java11-21.1.0\bin\gu.cmd install native-image
      - name: 'Set up Visual C Build Tools Workload for Visual Studio 2019 Build Tools'
        run: |
          choco install visualstudio2019-workload-vctools
      - name: 'Get Version Number'
        run: |
          echo "VERSION=$(./gradlew :relive-simulator-server:properties -q | grep "^version:" | awk '{print $2}')" >> $GITHUB_ENV
        shell: bash

      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2
        with:
          name: 'relive-simulator-server-${{env.VERSION}}-all.jar'

      - name: 'Build Native Image'
        shell: cmd
        env:
          JAVA_HOME: ./graalvm-ce-java11-21.1.0
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
          ./graalvm-ce-java11-21.1.0/bin/native-image -jar relive-simulator-server-${{env.VERSION}}-all.jar
      - name: 'Publish Windows Image'
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: 'relive-simulator-server-${{env.VERSION}}-windows.exe'
          path: 'relive-simulator-server-${{env.VERSION}}-all.exe'
